generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  walletAddress String  @unique
  username      String?
  role          Role    @default(NORMAL_USER)
  email         String? @unique
  phone         String?

  avatarUrl String?
  bio       String?

  lat Float?
  lng Float?

  reputationScore Float @default(0)
  reviewsCount    Int   @default(0)

  jobsCompleted       Int    @default(0)
  jobsPosted          Int    @default(0)
  earningsTotal       BigInt @default(0)
  distanceTravelledKm Float  @default(0)

  kycVerified    Boolean   @default(false)
  kycDocumentUrl String?
  kycVerifiedAt  DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jobsCreated   Job[] @relation("JobsCreated")
  jobsDelivered Job[] @relation("JobsDelivered")

  isBusy Boolean @default(false)
}

model Job {
  id             String @id @default(cuid())
  creator        User   @relation("JobsCreated", fields: [creatorAddress], references: [walletAddress])
  creatorAddress String

  courier        User?   @relation("JobsDelivered", fields: [courierAddress], references: [walletAddress])
  courierAddress String?

  status         JobStatus @default(ACTIVE)
  reward         BigInt
  metadataHash   String?
  pickupAddress  String
  dropoffAddress String
  description    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  eta       String
  isDeleted Boolean  @default(false)

  trackingUpdates TrackingUpdate[]

  @@index([creatorAddress])
  @@index([courierAddress])
  @@index([status])
}

model TrackingUpdate {
  id        String   @id @default(cuid())
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     String
  lat       Float
  lng       Float
  timestamp DateTime @default(now())
}

enum Role {
  COURIER
  NORMAL_USER
  ADMIN
}

enum JobStatus {
  ACTIVE
  IN_PROGRESS
  DELIVERED
  CANCELLED
}
